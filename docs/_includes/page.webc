<!doctype html>
<html webc:keep
      :lang="lang"
>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title @raw="title"></title>
    <link rel="stylesheet" href="./_general/modern-normalize.css" />
    <style webc:keep @raw="getCss(page.url)"></style>
  </head>
  <body>
    <slot name="header">
      <header></header>
    </slot>

    <main class="main-layout">
      <div class="main-layout__center">

        <article class="article-principal">
          <h1
            class="main-"
            @html="title"
          ></h1>

          <!-- default slot -- content -->
          <template webc:nokeep @raw="content"></template>
          <slot></slot>
        </article>
      </div>

      <div
        class="main-layout__side"
        webc:if="useSideMenu"
      >
        <!-- 1 seul élément enfant -->
          <side-menu
            :@menu="menu"
          >
            <span slot="header">
              <a
                :href="'/:lang/'"
                @text="siteTitle"
              ></a>
          </side-menu>
        </slot>
      </div>
    </main>

    <slot name="footer">
      <footer></footer>
    </slot>
  </body>
</html>

<style webc:scoped>
  /* Avec `webc:scoped`, les styles sont propres à ce composant */
  .main-layout {
    --side-menu-width: 16rem;
    --article-max-width: 40rem;
  }
  @media (min-width: 48rem) {
    .main-layout {
      display: flex;
      flex-direction: row;
      height: 100vh;
    }

    .main-layout__side {
      flex-basis: var(--side-menu-width);
      flex-shrink: 0;
      order: 1;
    }

    .main-layout__center {
      order: 2;
      flex-basis: auto;
      flex-grow: 1;
      height: 100%;
      overflow: auto;
      position: relative; /* Pour un éventuel élément sticky */
    }

    .main-layout__side {
      height: 100%;
    }
  }

  .main-layout__center {
    padding: .75rem;
  }

  .main-layout__side {
    display: grid;
    align-items: stretch;
    justify-content: stretch;
    overflow: auto;
  }

  .article-principal {
    max-width: var(--article-max-width);
  }
</style>
