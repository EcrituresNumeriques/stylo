fragment basicUserFields on User {
  _id
  displayName
  email
  createdAt
  updatedAt
  firstName
  lastName
  institution
}

fragment detailedUserFields on User {
  authTypes

  acquintances {
    _id
    email
    displayName
  }

  permissions {
    scope
    roles
    user {
      _id
      displayName
    }
  }

  workspaces {
    _id
    name
    color
  }
}

fragment authProviderFields on User {
  authProviders {
    humanid {
      id
      updatedAt
    }
    zotero {
      id
      token
      updatedAt
    }
  }
}

query getUserDetails($user: ID!) {
  user(user: $user) {
    ...basicUserFields
    ...authProviderFields
  }
}

query getFullUserProfile {
  user {
    ...basicUserFields
    ...detailedUserFields
    ...authProviderFields
  }
}

mutation createUser($details: NewUserInput!) {
  createUser(details: $details) {
    ...basicUserFields
  }
}

mutation updateUser($user: ID!, $details: UserProfileInput!) {
  updateUser(user: $user, details: $details) {
    ...basicUserFields
    ...authProviderFields
  }
}

mutation changePassword($old: String!, $new: String!, $user: ID!) {
  changePassword(old: $old, new: $new, user: $user) {
    ...detailedUserFields
  }
}

mutation setAuthToken($service: AuthTokenService!, $token: String) {
  setAuthToken(service: $service, token: $token) {
    ...authProviderFields
  }
}
