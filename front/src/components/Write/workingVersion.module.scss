@use '../../styles/defaults' as *;
@use '../../styles/variables' as *;

.section {
  @extend .wrapped-center;
  margin-bottom: 0.5em;
  display: flex;
  flex-direction: row;
}

.header {
  flex-grow: 1;
}

.title {
  font-size: 1.65rem;
  padding: 0;
  margin-top: 0.5rem;

  svg {
    margin: 0 .3em -0.1em 0;
  }
}

.owners {
  padding: 0;
}

.owners:after {
  content: "-";
  margin: 0 0.5em;
}

.version:after {
  content: "-";
  margin: 0 0.5em;
}

.versionNumber:before {
  content: '('
}

.versionNumber:after {
  content: ')'
}

.meta {
  display: flex;
  align-items: center;
  color: #4a4a4a;
  font-size: 0.75rem;
}

.byLine {
  display: flex;
  flex-direction: row;
  align-items: center;
  min-height: 2em;
}

.lastSaved {
  display: flex;
  align-items: center;
  gap: 0.15em;
  flex: 1 0 3em;
  font-size: 0.75rem;
  font-weight: 400;
  line-height: 1.5;
  margin-right: auto;
}

.savedIndicator, .savingIndicator, .failureIndicator {
  align-items: center;
  border-radius: 0.375em;
  display: inline-flex;
  justify-content: center;
  line-height: 1.5;
  margin-right: auto;
}

.savedIndicator > svg,
.savingIndicator > svg,
.failureIndicator > svg {
  padding: 0.25em;
}

.savingIndicator > svg {
  animation: rotation 2.5s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  flex-shrink: 0;
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}

.savedIndicator,
.savingIndicator {
  // background-color: #f5f5f5;
  color: #4a4a4a;
}

.failureIndicator {
  background-color: $beware-background;
  color: $error-color;
  padding-left: 0.75rem;
  padding-right: 0.75rem;

  strong {
    margin-right: .5em;
  }

  & > svg {
    margin-right: 0.25rem;
  }
}

time {
  font-style: normal;
}

.actions {
  display: flex;
  margin-top: 0.75rem;
  margin-bottom: 0.75rem;
  font-size: 0.9em;
  justify-content: flex-end;
  gap: 0.5em;
}

.focusButton {
  margin-left: 2em;
  border-radius: 2em;
  border: 1px solid currentColor;
}

.focusButton:hover:not([disabled]),
.focusButton:focus:not([disabled]) {
  background-color: white;
}

.focusButton > svg {
  margin-right: 0.3em;
  margin-left: 0
}

.focusActiveButton {
  background-color: $button-primary-background;
  color: $button-primary-color;
}

.focusActiveButton:hover:not([disabled]),
.focusActiveButton:focus:not([disabled]) {
  background-color: $button-primary-background;
}
